# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

variables:
  buildVersionMajor: 0
  buildVersionMinor: 1
  buildVersionRevision: $[counter(format('{0}.{1}', variables['buildVersionMajor'], variables['buildVersionMinor']), 0)]

# Job
name: '$(buildVersionMajor).$(buildVersionMinor).$(buildVersionRevision)'

strategy:
  matrix:
    #windows-x86:
    #  poolName: Azure Pipelines
    #  imageName: 'windows-latest'
    #  rustup_toolchain: stable
    #  target: i686-pc-windows-msvc
    #  is_cross_compile: false
    #windows-x64:
    #  poolName: Azure Pipelines
    #  imageName: 'windows-latest'
    #  rustup_toolchain: stable
    #  target: x86_64-pc-windows-msvc
    #  is_cross_compile: false
    #windows-arm64:
    #  poolName: Azure Pipelines
    #  imageName: 'windows-latest'
    #  rustup_toolchain: stable
    #  target: aarch64-pc-windows-msvc
    #  is_cross_compile: true
    #mac-x64:
    #  poolName: Azure Pipelines
    #  imageName: 'macos-latest'
    #  rustup_toolchain: stable
    #  target: x86_64-apple-darwin
    #  is_cross_compile: false
    #linux-x64:
    #  poolName: Azure Pipelines
    #  imageName: 'ubuntu-latest'
    #  rustup_toolchain: stable
    #  target: x86_64-unknown-linux-gnu
    #  is_cross_compile: false
    linux-arm64:
      poolName: r12f-arm64
      imageName: 
      rustup_toolchain: stable
      target: aarch64-unknown-linux-gnu
      is_cross_compile: false

pool:
  name: $(poolName)
  vmImage: $(imageName)

steps:
- bash: |
    rustup default $RUSTUP_TOOLCHAIN
    rustup update $RUSTUP_TOOLCHAIN
  displayName: rustup update default toolchain

- script: rustup target install $(TARGET)
  displayName: rustup install target

- bash: sed -i 's/^version = "0.1.0"$/version = "$(buildVersionMajor).$(buildVersionMinor).$(buildVersionRevision)"/' Cargo.toml
  displayName: Update crate version

- script: cargo build --release --all --target $(TARGET)
  displayName: Cargo build

- script: cargo test --release --all --target $(TARGET)
  displayName: Cargo test
  condition: eq(variables['is_cross_compile'], false)
